---
title: "Meritocracia 1"
---

```{r, data, echo=FALSE}
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled,
               ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, 
               sjmisc, ggalluvial, shadowtext)

#Data

load("input/data/original/edumer_students_long.RData")

```

```{r, preparacion, echo=FALSE, message=FALSE}
# Codificamos los valores 99-88 como missing para todas las variables
db_long <- edumer_students_long %>% set_na(., na = c(99, 88))

# Iteramos la recodificación de etiquetas para cada variable y fraseo

for (i in names(dplyr::select(db_long, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo")
  )
}


for (i in names(dplyr::select(db_long, tidyselect::starts_with("p10_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
  )
}


for (i in names(dplyr::select(db_long, tidyselect::starts_with("p11_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
  )
}

for (i in names(dplyr::select(db_long, tidyselect::starts_with("p12_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Si", "No")
  )
}

for (i in names(dplyr::select(db_long, tidyselect::starts_with("p13_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
  )
}



for (i in names(dplyr::select(db_long, tidyselect::starts_with("p18_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
  )
}
```

```{r, sociodemo-recod, echo=FALSE}
# nivel educ-hogar
db_long <- db_long %>%
  mutate(educ_max = case_when(
    !is.na(p26) & is.na(p27) ~ p26,
    is.na(p26) & !is.na(p27) ~ p27,
    !is.na(p26) & !is.na(p27) ~ pmax(p26, p27, na.rm = TRUE),
    TRUE ~ NA_real_
  )) 

db_long$educ_max <- car::recode(db_long$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
db_long$educ_max <- factor(db_long$educ_max, 
                              levels=c(1,2),
                              labels=c("Enseñanza media o menos","Estudios superiores"))


# libros-hogar

db_long$p30 <- car::recode(db_long$p30,"1=1;2=1;3=1;4=2;5=2;6=2")
db_long$p30 <- factor(db_long$p30,
                                 levels=c(1,2),
                                 labels=c("Menos de 25 libros","Más de 25 libros"))

db_long <- db_long %>% rename(libros_hogar = p30)

# genero
db_long$p20 <- car::recode(db_long$p20, "3=NA")
db_long$p20 <- factor(db_long$p20,
                      levels=c(1,2),
                      labels=c("Hombre","Mujer"))

db_long <- db_long %>% rename(genero = p20)

# con datos ola 2 

load("input/data/original/db_proc_students_w02.RData")

db_students_w02 <- db_students_w02 %>% set_na(., na = c(99, 88))

# genero
db_students_w02$p14_o2 <- car::recode(db_students_w02$p14_o2, "3=NA")
db_students_w02$p14_o2 <- factor(db_students_w02$p14_o2,
                      levels=c(1,2),
                      labels=c("Hombre","Mujer"))

db_students_w02 <- db_students_w02 %>% rename(genero = p14_o2)

# curso 
db_students_w02$nivel_estudiante_o2 <- factor(db_students_w02$nivel_estudiante_o2,
                      levels=c(1,2),
                      labels=c("Básica","Media"))
```

## Meritocracia

### Percepción Esfuerzo

```{r, gráfico alluvial 1, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_1) & !is.na(ola))
db_long$p1_1 <- factor(db_long$p1_1, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_1) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_1) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_1 <- factor(pe$p1_1)
etiquetas.pe$p1_1 <- factor(etiquetas.pe$p1_1)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_1, stratum = p1_1,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 1: En esta escuela quienes se esfuerzan\nobtienen buenas notas") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-1, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_1_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_1_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_1_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_1_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 1: En esta escuela quienes se esfuerzan\nobtienen buenas notas",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-1, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_1) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_1))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 1: En esta escuela quienes se esfuerzan\nobtienen buenas notas") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Percepción Talento

```{r, gráfico 2, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_2) & !is.na(ola))
db_long$p1_2 <- factor(db_long$p1_2, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_2) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_2) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_2 <- factor(pe$p1_2)
etiquetas.pe$p1_2 <- factor(etiquetas.pe$p1_2)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_2, stratum = p1_2,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 2: En Chile, las personas son recompensadas por su \n inteligencia y habilidad") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-2, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_2_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_2_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_2_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_2_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 2: En Chile, las personas son recompensadas por su \n inteligencia y habilidad",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-2, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_2))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 2: En Chile, las personas son recompensadas por su \n inteligencia y habilidad") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Percepción Padres Ricos

```{r, gráfico 3, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_3) & !is.na(ola))
db_long$p1_3 <- factor(db_long$p1_3, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_3) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_3) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_3 <- factor(pe$p1_3)
etiquetas.pe$p1_3 <- factor(etiquetas.pe$p1_3)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_3, stratum = p1_3,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 3: En Chile, a quienes tienen padres ricos les va mucho \n mejor en la vida.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-3, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_3_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_3_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_3_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_3_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 3: En Chile, a quienes tienen padres ricos les va mucho \n mejor en la vida.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-3, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_3) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_3))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title ="Figura 3: En Chile, a quienes tienen padres ricos les va mucho \n mejor en la vida.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Percepción Buenos Contactos

```{r, gráfico 4, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_4) & !is.na(ola))
db_long$p1_4 <- factor(db_long$p1_4, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_4) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_4) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_4 <- factor(pe$p1_4)
etiquetas.pe$p1_4 <- factor(etiquetas.pe$p1_4)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_4, stratum = p1_4,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 4: En Chile, quienes tienen buenos contactos les va mejor \n en la vida.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-4, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_4_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_4_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_4_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_4_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 4: En Chile, quienes tienen buenos contactos les va mejor \n en la vida.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-4, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_4) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_4))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 4: En Chile, quienes tienen buenos contactos les va mejor \n en la vida.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Preferencia Esfuerzo

```{r, gráfico 5, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_5) & !is.na(ola))
db_long$p1_5 <- factor(db_long$p1_5, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_5) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_5) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_1 <- factor(pe$p1_5)
etiquetas.pe$p1_5 <- factor(etiquetas.pe$p1_5)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_5, stratum = p1_5,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 5: Quienes más se esfuerzan deberían obtener mayores \n recompensas que quienes se esfuerzan menos.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-5, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_4_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_4_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_4_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_4_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
   "Figura 5: Quienes más se esfuerzan deberían obtener mayores \n recompensas que quienes se esfuerzan menos.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-5, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_5) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_5))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 1: En esta escuela quienes se esfuerzan\nobtienen buenas notas") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Preferencia Talento

```{r, gráfico 6, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_6) & !is.na(ola))
db_long$p1_6 <- factor(db_long$p1_6, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_6) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_6) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_6 <- factor(pe$p1_6)
etiquetas.pe$p1_6 <- factor(etiquetas.pe$p1_6)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_6, stratum = p1_6,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 6: Quienes poseen más talento deberían obtener mayores \n recompensas que quienes poseen menos talento.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-6, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_6_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_6_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_6_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_6_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 6: Quienes poseen más talento deberían obtener mayores \n recompensas que quienes poseen menos talento.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-6, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_6) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_6))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 6: Quienes poseen más talento deberían obtener mayores \n recompensas que quienes poseen menos talento.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Preferencia Padres ricos

```{r, gráfico 7, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_7) & !is.na(ola))
db_long$p1_7 <- factor(db_long$p1_7, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_7) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_7) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_7 <- factor(pe$p1_7)
etiquetas.pe$p1_7 <- factor(etiquetas.pe$p1_7)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_7, stratum = p1_7,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 7:  Está bien que quienes tienen padres ricos les vaya \n bien en la vida.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-7, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_7_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_7_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_7_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_7_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
   "Figura 7:  Está bien que quienes tienen padres ricos les vaya \n bien en la vida.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-7, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_7) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_7))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 7:  Está bien que quienes tienen padres ricos les vaya \n bien en la vida.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Preferencia Buenos contactos

```{r, gráfico 8, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_8) & !is.na(ola))
db_long$p1_8 <- factor(db_long$p1_8, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_8) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_8) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_8 <- factor(pe$p1_8)
etiquetas.pe$p1_8 <- factor(etiquetas.pe$p1_8)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_8, stratum = p1_8,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 8: Está bien que quienes tienen buenos contactos les \n vaya bien en la vida.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-8, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_8_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_8_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_8_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_8_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 8: Está bien que quienes tienen buenos contactos les \n vaya bien en la vida.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-8, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_8) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_8))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 8: Está bien que quienes tienen buenos contactos les \n vaya bien en la vida.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Percepción Oportunidades

```{r, gráfico 9, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_9) & !is.na(ola))
db_long$p1_9 <- factor(db_long$p1_9, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_9) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_9) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_9 <- factor(pe$p1_9)
etiquetas.pe$p1_9 <- factor(etiquetas.pe$p1_9)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_9, stratum = p1_9,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 9:  En Chile, todas las personas tienen las mismas \n oportunidades para salir adelante.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-9, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_9_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_9_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_9_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_9_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 9:  En Chile, todas las personas tienen las mismas \n oportunidades para salir adelante.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-9, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_9) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_9))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 9:  En Chile, todas las personas tienen las mismas \n oportunidades para salir adelante.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

### Percepción Meritocracia

```{r, gráfico 10, echo=FALSE}
# Paso 1: Preparar datos--------------------------------------------------------
db_long <- db_long %>% filter(!is.na(p1_10) & !is.na(ola))
db_long$p1_10 <- factor(db_long$p1_10, labels= c("Muy en desacuerdo", "En desacuerdo",
                                               "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias-------------------------------------------------
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p1_10) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p1_10) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p1_10 <- factor(pe$p1_10)
etiquetas.pe$p1_10 <- factor(etiquetas.pe$p1_10)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p1_10, stratum = p1_10,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = c("Olas"),
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura 10: En Chile, todas las personas obtienen lo que merecen.") +
  theme(legend.position = "bottom") + 
  theme_blank()

plot_pe
```

Cruces con características sociodemográficas de estudiantes en la *ola 2* del estudio

```{r, dona-curso-10, echo=FALSE }
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- db_students_w02 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p1_10_o2) #se filtran valores para esa categoría del curso

basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$p1_10_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- db_students_w02 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p1_10_o2) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$p1_10_o2)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
  geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
  theme_void()+
  theme(legend.title = element_blank(),
        plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

esfuerzo_curso <- ggarrange(
  plot_basica_esfuerzo, 
  plot_media_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 10: En Chile, todas las personas obtienen lo que merecen.",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_percep_curso
```

```{r, sociodemo-10, echo=FALSE}

# Paso 1: Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)

# Paso 2: Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Paso 3: Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, p1_10) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()

# Paso 4: Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Paso 5: Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Paso 6: Graficar las barras 
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p1_10))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
                  position = position_stack(vjust = 0.5), 
                  color = "white",   # Color del texto interno
                  bg.color = "grey30",  # Color del borde (sombra)
                  bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
                  size = 4
                  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Grado de acuerdo",
    title = "Figura 10: En Chile, todas las personas obtienen lo que merecen.") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```
