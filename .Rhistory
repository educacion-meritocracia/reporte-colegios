frecuencias_originales <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, p2_1) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p2_1))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5),
color = "grey30", # Color del contorno
fill = "white", # Color del relleno interno
size = 4,
stroke = 0.3) # Grosor del contorno
+
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Grado de acuerdo",
title = "Figura 1.3: En esta escuela, los/as estudiantes son recompensados por sus esfuerzos"
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo",
"3" = "De acuerdo", "4" = "Muy de acuerdo"),
name = NULL)
library(shadowtext)
db_w02 <- db_long %>% filter(ola==2)
# Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, p2_1) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p2_1))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5),
color = "white",   # Color del texto interno
bg.color = "grey30",  # Color del borde (sombra)
bg.r = 0.2,  # Radio de la sombra (ajústalo según necesites)
size = 4) +
labs(
x = NULL,
y = NULL,
fill = "Grado de acuerdo",
title = "Figura 1.3: En esta escuela, los/as estudiantes son recompensados por sus esfuerzos"
) +
theme_blank() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
strip.text = element_text(size = 9, face = "bold"),
axis.text.x = element_text(size = 9),
legend.position = "bottom",
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo",
"3" = "De acuerdo", "4" = "Muy de acuerdo"),
name = NULL)
library(shadowtext)
db_w02 <- db_long %>% filter(ola==2)
# Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, p2_1) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p2_1))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5),
color = "white",   # Color del texto interno
bg.color = "grey30",  # Color del borde (sombra)
bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
size = 4) +
labs(
x = NULL,
y = NULL,
fill = "Grado de acuerdo",
title = "Figura 1.3: En esta escuela, los/as estudiantes son recompensados por sus esfuerzos"
) +
theme_blank() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
strip.text = element_text(size = 9, face = "bold"),
axis.text.x = element_text(size = 9),
legend.position = "bottom",
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo",
"3" = "De acuerdo", "4" = "Muy de acuerdo"),
name = NULL)
db_w02 <- db_long %>% filter(ola==2)
# Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, curso),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, p2_1) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p2_1))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5),
color = "white",   # Color del texto interno
bg.color = "grey30",  # Color del borde (sombra)
bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
size = 4) +
labs(
x = NULL,
y = NULL,
fill = "Grado de acuerdo",
title = "Figura 1.3: En esta escuela, los/as estudiantes son recompensados por sus esfuerzos") +
theme_blank() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
strip.text = element_text(size = 9, face = "bold"),
axis.text.x = element_text(size = 9),
legend.position = "bottom",
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo",
"3" = "De acuerdo", "4" = "Muy de acuerdo"),
name = NULL)
# cargar paquetes
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)
# cargar base longitudinal
load("../edumer-ola2/input/data/proc/edumer_students_long.RData")
# codificamos los valores 99-88 como missing para todas las variables
db_long <- edumer_students_long %>% set_na(., na = c(99, 88))
# iteramos la recodificación de etiquetas para cada variable y fraseo
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Muy en db_longacuerdo", "db_longacuerdo", "De acuerdo", "Muy de acuerdo")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p10_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p11_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p12_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Si", "No")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p13_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p18_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
)
}
# nivel educ-hogar
db_long <- db_long %>%
mutate(educ_max = case_when(
!is.na(p26) & is.na(p27) ~ p26,
is.na(p26) & !is.na(p27) ~ p27,
!is.na(p26) & !is.na(p27) ~ pmax(p26, p27, na.rm = TRUE),
TRUE ~ NA_real_
))
db_long$educ_max <- car::recode(db_long$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
db_long$educ_max <- factor(db_long$educ_max,
levels=c(1,2),
labels=c("Enseñanza media o menos","Estudios superiores"))
#curso estudiante
db_long <- db_long %>%
mutate(curso = case_when(
grepl("^(2|1)", d3_def, ignore.case = TRUE) ~ 'Media',
grepl("^(7|6)", d3_def, ignore.case = TRUE) ~ 'Básica',
TRUE ~ d3_def  # mantener el valor original si no coincide con ninguna condición
))
# libros-hogar
db_long$p30 <- car::recode(db_long$p30,"1=1;2=1;3=1;4=2;5=2;6=2")
db_long$p30 <- factor(db_long$p30,
levels=c(1,2),
labels=c("Menos de 25 libros","Más de 25 libros"))
# genero
db_long$p20 <- car::recode(db_long$p20, "3=NA")
db_long$p20 <- factor(db_long$p20,
levels=c(1,2),
labels=c("Hombre","Mujer"))
db_long <- db_long %>% rename(libros_hogar = p30,
genero = p20)
# Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)
frq(db_w02$curso)
ctable(db_long$ola, db_long$curso,
prop = "c",
useNA = "no")
ctable(edumer_students_long$ola, edumer_students_long$d3_def,
prop = "c",
useNA = "no")
frq(edumer_students_long$d3_def_w01_V)
frq(edumer_students_long$d3_def)
View(edumer_students_long)
frq(db_long$nivel_estudiante)
frq(edumer_students_long$nivel_estudiante)
db_long$nivel_estudiante <- car::recode(db_long$nivel_estudiante, "1=1; 2=1; 3=2; 4=2")
db_long$nivel_estudiante <- factor(db_long$nivel_estudiante,
levels=c(1,2),
labels=c("Básica","Media"))
frq(db_long$nivel_estudiante)
# cargar paquetes
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)
# cargar base longitudinal
load("../edumer-ola2/input/data/proc/edumer_students_long.RData")
# cargar paquetes
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)
# cargar base longitudinal
load("../edumer-ola2/input/data/proc/edumer_students_long.RData")
# cargar paquetes
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)
# cargar base longitudinal
load("../edumer-ola2/input/data/proc/edumer_students_long.RData")
# codificamos los valores 99-88 como missing para todas las variables
db_long <- edumer_students_long %>% set_na(., na = c(99, 88))
# iteramos la recodificación de etiquetas para cada variable y fraseo
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Muy en db_longacuerdo", "db_longacuerdo", "De acuerdo", "Muy de acuerdo")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p10_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p11_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p12_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Si", "No")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p13_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p18_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
)
}
# nivel educ-hogar
db_long <- db_long %>%
mutate(educ_max = case_when(
!is.na(p26) & is.na(p27) ~ p26,
is.na(p26) & !is.na(p27) ~ p27,
!is.na(p26) & !is.na(p27) ~ pmax(p26, p27, na.rm = TRUE),
TRUE ~ NA_real_
))
db_long$educ_max <- car::recode(db_long$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
db_long$educ_max <- factor(db_long$educ_max,
levels=c(1,2),
labels=c("Enseñanza media o menos","Estudios superiores"))
#curso estudiante
db_long$nivel_estudiante <- car::recode(db_long$nivel_estudiante, "1=1; 2=1; 3=2; 4=2")
db_long$nivel_estudiante <- factor(db_long$nivel_estudiante,
levels=c(1,2),
labels=c("Básica","Media"))
# libros-hogar
db_long$p30 <- car::recode(db_long$p30,"1=1;2=1;3=1;4=2;5=2;6=2")
db_long$p30 <- factor(db_long$p30,
levels=c(1,2),
labels=c("Menos de 25 libros","Más de 25 libros"))
# genero
db_long$p20 <- car::recode(db_long$p20, "3=NA")
db_long$p20 <- factor(db_long$p20,
levels=c(1,2),
labels=c("Hombre","Mujer"))
db_long <- db_long %>% rename(libros_hogar = p30,
genero = p20)
# Filtramos la bbdd por la ola 2
db_w02 <- db_long %>% filter(ola==2)
# Calcular las frecuencias originales
frecuencias_originales <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, nivel_estudiante),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- db_w02 %>%
pivot_longer(cols = c(genero, educ_max, libros_hogar, nivel_estudiante),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, p2_1) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("nivel_estudiante" = "Curso",
"educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p2_1))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5),
color = "white",   # Color del texto interno
bg.color = "grey30",  # Color del borde (sombra)
bg.r = 0.1,  # Radio de la sombra (ajústalo según necesites)
size = 3.3
) +
labs(
x = NULL,
y = NULL,
fill = "Grado de acuerdo",
title = "Figura 1.3: En esta escuela, los/as estudiantes son recompensados por sus esfuerzos") +
theme_blank() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
strip.text = element_text(size = 9, face = "bold"),
axis.text.x = element_text(size = 9),
legend.position = "right",
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo",
"3" = "De acuerdo", "4" = "Muy de acuerdo"),
name = NULL)
ctable(db_long$ola, db_long$nivel_estudiante,
prop = "c",
useNA = "no")
frq(edumer_students_long$nivel_estudiante)
ctable(edumer_students_long$ola, edumer_students_long$nivel_estudiante,
prop = "c",
useNA = "no")
ctable(edumer_students_long$ola, edumer_students_long$nivel_estudiante,
prop = "c",
useNA = "no")
table(edumer_students_long$ola, edumer_students_long$nivel_estudiante)
est <- db_long %>%
group_by(id_estudiante) %>%
count(ola > 1)
est <- db_long %>%
group_by(id_estudiante)
View(est)
est <- db_long %>%
group_by(ola)
est <- db_long %>%
group_by(ola)
View(est)
est <- db_long %>%
group_by(id_esutdiante, ola)
est <- db_long %>%
group_by(id_estudiante, ola)
View(est)
est <- db_long %>%
group_by(id_estudiante, ola) %>%
count(ola >= 1)
View(est)
est <- db_long %>%
group_by(id_estudiante, ola) %>%
count(ola > 1)
View(est)
est <- db_long %>%
group_by(id_estudiante, ola) %>%
count(id_estudiante > 1)
View(est)
etiquetas.pe <- db_long %>%
group_by(ola, p2_1)
View(etiquetas.pe)
etiquetas.pe <- db_long %>%
group_by(ola, p2_1) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola)
View(etiquetas.pe)
