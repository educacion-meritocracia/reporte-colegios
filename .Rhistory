mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
group_by(ola, p2_1) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
pe$p2_1 <- factor(pe$p2_1)
etiquetas.pe$p2_1 <- factor(etiquetas.pe$p2_1)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_pe <- pe %>%
ggplot(aes(x = ola, fill = p2_1, stratum = p2_1,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.pe,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: En esta escuela quienes se esfuerzan\nobtienen buenas notas") +
theme(legend.position = "bottom") +
theme_blank()
plot_pe
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p2_1) & !is.na(ola))
db_long$p2_1 <- factor(db_long$p2_1, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
# Paso 2: Calcular frecuencias
pe <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p2_1) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
group_by(ola, p2_1) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
pe$p2_1 <- factor(pe$p2_1)
etiquetas.pe$p2_1 <- factor(etiquetas.pe$p2_1)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_pe <- pe %>%
ggplot(aes(x = ola, fill = p2_1, stratum = p2_1,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.pe,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: En esta escuela quienes se esfuerzan\nobtienen buenas notas") +
theme(legend.position = "bottom") +
theme_blank()
plot_pe
# cargar paquetes
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)
# cargar base longitudinal
load("../edumer-ola2/input/data/proc/edumer_students_long.RData")
# codificamos los valores 99-88 como missing para todas las variables
db_long <- edumer_students_long %>% set_na(., na = c(99, 88))
# iteramos la recodificación de etiquetas para cada variable y fraseo
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Muy en db_longacuerdo", "db_longacuerdo", "De acuerdo", "Muy de acuerdo")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p10_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p11_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p12_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Si", "No")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p13_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
)
}
for (i in names(dplyr::select(db_long, tidyselect::starts_with("p18_")))) {
db_long[[i]] <- sjlabelled::set_labels(
x = db_long[[i]],
labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
)
}
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p2_2) & !is.na(ola))
db_long$p2_2 <- factor(db_long$p2_2, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
# Paso 2: Calcular frecuencias
pt <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p2_2) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.pt <- db_long %>%
group_by(ola, p2_2) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
pt$p2_2 <- factor(pt$p2_2)
etiquetas.pt$p2_2 <- factor(etiquetas.pt$p2_2)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_pt <- pt %>%
ggplot(aes(x = ola, fill = p2_2, stratum = p2_2,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.pt,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: En esta escuela quienes son inteligentesn\nobtienen buenas notas") +
theme(legend.position = "bottom") +
theme_blank()
plot_pt
# Paso 6: Graficar
plot_pt <- pt %>%
ggplot(aes(x = ola, fill = p2_2, stratum = p2_2,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.pt,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: En esta escuela quienes son inteligentes n\nobtienen buenas notas") +
theme(legend.position = "bottom") +
theme_blank()
plot_pt
# Paso 6: Graficar
plot_pt <- pt %>%
ggplot(aes(x = ola, fill = p2_2, stratum = p2_2,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.pt,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: En esta escuela quienes son inteligentes \nobtienen buenas notas") +
theme(legend.position = "bottom") +
theme_blank()
plot_pt
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p2_3) & !is.na(ola))
db_long$p2_3 <- factor(db_long$p2_3, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
# Paso 2: Calcular frecuencias
pm <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p2_3) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.pm <- db_long %>%
group_by(ola, p2_3) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
pm$p2_3 <- factor(pm$p2_3)
etiquetas.pm$p2_3 <- factor(etiquetas.pm$p2_3)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_pm <- pm %>%
ggplot(aes(x = ola, fill = p2_3, stratum = p2_3,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.pm,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: En esta escuela los estudiantes n\nobtienen las notas que merecen") +
theme(legend.position = "bottom") +
theme_blank()
plot_pm
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p5) & !is.na(ola))
db_long$p5 <- factor(db_long$p5, labels= c("Menos de lo que merzco", "Lo que merzco", "Más de lo que merzco"))
# Paso 2: Calcular frecuencias
mn <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p5) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.mn <- db_long %>%
group_by(ola, p5) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
mn$p5 <- factor(mn$p5)
etiquetas.mn$p5 <- factor(etiquetas.mn$p5)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_mn <- mn %>%
ggplot(aes(x = ola, fill = p5, stratum = p5,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.mn,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: ") +
theme(legend.position = "bottom") +
theme_blank()
plot_mn
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p7) & !is.na(ola))
db_long$p5 <- factor(db_long$p7, labels= c("Menos de lo que merzco", "Lo que merzco", "Más de lo que merzco"))
# Paso 2: Calcular frecuencias
mne <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p7) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.mne <- db_long %>%
group_by(ola, p7) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
mne$p7 <- factor(mne$p7)
etiquetas.mne$p7 <- factor(etiquetas.mne$p7)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_mne <- mne %>%
ggplot(aes(x = ola, fill = p7, stratum = p7,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.mne,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: ") +
theme(legend.position = "bottom") +
theme_blank()
plot_mne
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p7) & !is.na(ola))
db_long$p7 <- factor(db_long$p7, labels= c("Menos de lo que merzco", "Lo que merzco", "Más de lo que merzco"))
# Paso 2: Calcular frecuencias
mne <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p7) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.mne <- db_long %>%
group_by(ola, p7) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
mne$p7 <- factor(mne$p7)
etiquetas.mne$p7 <- factor(etiquetas.mne$p7)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_mne <- mne %>%
ggplot(aes(x = ola, fill = p7, stratum = p7,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.mne,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: ") +
theme(legend.position = "bottom") +
theme_blank()
plot_mne
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p8_1) & !is.na(ola))
db_long$p8_1 <- factor(db_long$p8_1, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
# Paso 2: Calcular frecuencias
ce <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p8_1) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.ce <- db_long %>%
group_by(ola, p8_1) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
ce$p8_1 <- factor(ce$p8_1)
etiquetas.ce$p8_1 <- factor(etiquetas.ce$p8_1)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_ce <- ce %>%
ggplot(aes(x = ola, fill = p8_1, stratum = p8_1,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.ce,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: Las personas pueden esforzarse más si lo intentan") +
theme(legend.position = "bottom") +
theme_blank()
plot_ce
# Gráfico alluvial
# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p8_2) & !is.na(ola))
db_long$p8_2 <- factor(db_long$p8_2, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
# Paso 2: Calcular frecuencias
ct <- db_long %>%
group_by(id_estudiante, ola) %>%
count(p8_2) %>%
group_by(ola) %>%
mutate(porcentaje=n/sum(n)) %>%
ungroup() %>%
na.omit()
# Paso 3: Agregar etiquetas
etiquetas.ct <- db_long %>%
group_by(ola, p8_2) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(ola) %>%
mutate(porcentaje = count / sum(count)) %>%
na.omit() %>%
mutate(id_estudiante = 1)
# Paso 4: Ordenar los factores de la misma forma
ct$p8_2 <- factor(ct$p8_2)
etiquetas.ct$p8_2 <- factor(etiquetas.ct$p8_2)
# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")
# Paso 6: Graficar
plot_ct <- ct %>%
ggplot(aes(x = ola, fill = p8_2, stratum = p8_2,
alluvium = id_estudiante, y = porcentaje)) +
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.ct,
aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = 'white',
bg.colour = 'grey30') +
labs(y = "Porcentaje",
x = "Ola",
fill = "Grado de acuerdo",
caption = "Fuente: EDUMER",
title = "Figura: Las personas pueden ser más inteligentes si lo intentan") +
theme(legend.position = "bottom") +
theme_blank()
plot_ct
