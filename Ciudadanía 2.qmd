---
title: "Ciudadanía 2"
---

```{r, echo=FALSE}

pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)

load("output/data/db_proc_students_w02.RData")
load("output/data/db_proc_students.RData")

ciud1 <- db_students %>%
  select(id_estudiante, nivel_estudiante, p17_1, p17_2, p19, p20, p26, p27, p30) %>%
  mutate(across(everything(), ~ na_if(.x, 99))) %>% 
  mutate(across(everything(), ~ na_if(.x, 88))) %>%  
  na.omit() 

# Educación padres
ciud1 <- ciud1 %>%
  mutate(educ_max = case_when(
    !is.na(p26) & is.na(p27) ~ p26,
    is.na(p26) & !is.na(p27) ~ p27,
    !is.na(p26) & !is.na(p27) ~ pmax(p26, p27, na.rm = TRUE),
    TRUE ~ NA_real_
  ))

ciud1$educ_max <- car::recode(ciud1$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
ciud1$educ_max <- factor(ciud1$educ_max,
                         levels = c(1,2),
                         labels = c("Enseñanza media o menos","Estudios superiores"))

# Curso estudiante

ciud1$nivel_estudiante <- car::recode(ciud1$nivel_estudiante, "1=1; 2=1; 3=2; 4=2")
ciud1$nivel_estudiante <- factor(ciud1$nivel_estudiante,
                                 levels = c(1,2),
                                 labels = c("Básica","Media"))

# Libros en el hogar

ciud1$p30 <- car::recode(ciud1$p30, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
ciud1$p30 <- factor(ciud1$p30,
                    levels = c(1,2),
                    labels = c("Menos de 25 libros","Más de 25 libros"))

# Género

ciud1$p20 <- car::recode(ciud1$p20, "3=NA")
ciud1$p20 <- factor(ciud1$p20,
                    levels = c(1,2),
                    labels = c("Hombre","Mujer"))
ciud1 <- ciud1 %>% rename(libros_hogar = p30,
                          genero = p20)

# Ola 2
ciud2 <- db_students_w02 %>%
  select(id_estudiante, nivel_estudiante_o2, p11_1_o2, p11_2_o2, p12_o2, p13_1_o2, p13_2_o2, p13_3_o2, p13_4_o2, p13_5_o2, p13_6_o2, p13_7_o2, p13_8_o2, p13_9_o2, p13_10_o2, p13_11_o2, p13_12_o2, p14_o2, p17_o2, p18_o2, p19_o2) %>%
  mutate(across(everything(), ~ na_if(.x, 99))) %>%  
  mutate(across(everything(), ~ na_if(.x, 88))) %>%  
  na.omit()  


# Educación padres
ciud2 <- ciud2 %>%
  mutate(educ_max = case_when(
    !is.na(p17_o2) & is.na(p18_o2) ~ p17_o2,
    is.na(p17_o2) & !is.na(p18_o2) ~ p18_o2,
    !is.na(p17_o2) & !is.na(p18_o2) ~ pmax(p17_o2, p18_o2, na.rm = TRUE),
    TRUE ~ NA_real_
  ))

ciud2$educ_max <- car::recode(ciud2$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
ciud2$educ_max <- factor(ciud2$educ_max,
                         levels = c(1,2),
                         labels = c("Enseñanza media o menos","Estudios superiores"))

# Curso estudiante

ciud2$nivel_estudiante_o2 <- factor(ciud2$nivel_estudiante_o2,
                                 levels = c(1,2),
                                 labels = c("Básica","Media"))

# Libros en el hogar

ciud2$p19_o2 <- car::recode(ciud2$p19_o2, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
ciud2$p19_o2 <- factor(ciud2$p19_o2,
                    levels = c(1,2),
                    labels = c("Menos de 25 libros","Más de 25 libros"))

# Género

ciud2$p14_o2 <- car::recode(ciud2$p14_o2, "3=NA")
ciud2$p14_o2 <- factor(ciud2$p14_o2,
                    levels = c(1,2),
                    labels = c("Hombre","Mujer"))
ciud2 <- ciud2 %>% rename(libros_hogar = p19_o2,
                          genero = p14_o2)


```

## Participación y comprensión política

```{r alluvial1, echo=FALSE}

load("output/data/edumer_students_long.RData")


# Gráfico cuando sea adulto
db_long <- edumer_students_long %>% filter(!is.na(p17_1) & !is.na(ola))
db_long$p17_1 <- factor(db_long$p17_1, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Calcular frecuencias
participar <- db_long %>%
  group_by(id_estudiante, ola) %>%
  count(p17_1) %>%
  group_by(ola) %>%
  mutate(porcentaje=n/sum(n)) %>%
  ungroup() %>%
  na.omit()

# Agregar etiquetas
etiquetas.participar <- db_long %>%
  group_by(ola, p17_1) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>%
  na.omit() %>%
  mutate(id_estudiante = 1)
  
# Ordenar factores
participar$p17_1 <- factor(participar$p17_1)
etiquetas.participar$p17_1 <- factor(etiquetas.participar$p17_1)

# Colores
colors <- c("#f1eef6ff", "#bdc9e1ff", "#74a9cfff", "#0570b0ff")

# Graficar
plot_participar <- participar %>%
  ggplot(aes(x = ola, fill = p17_1, stratum = p17_1,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) +
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.participar,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                      position = position_stack(vjust = .5),
                      show.legend = FALSE,
                      size = 4,
                      color = "white",
                      bg.colour = "grey30") +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura: Cuando sea adulto(a) podré participar en la política") +
  theme(legend.position = "bottom") +
  theme_blank()

plot_participar

```

*Cruces con características sociodemográficas de los estudiantes en la **ola 2** del estudio*

```{r, dona-curso1, echo=FALSE}

# dona curso: Básica

basica_participar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p11_1_o2) #se filtran valores para esa categoría del curso
  
basica_participar = round(prop.table(table(categorias=basica_participar$p11_1_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_participar = as.data.frame(basica_participar) #convertimos el objeto en data.frame

basica_participar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p11_1_o2)

# Crear tabla de frecuencias relativas
basica_participar <- prop.table(table(basica_participar$p11_1_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_participar) <- c("categorias", "Freq")

basica_participar$categorias <- factor(basica_participar$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_participar<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_participar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p11_1_o2) 

media_participar = round(prop.table(table(categorias=media_participar$p11_1_o2)),2)  

media_participar = as.data.frame(media_participar)

media_participar$categorias <- factor(media_participar$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_participar<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

participar_curso <- ggarrange(
   plot_basica_participar, 
   plot_media_participar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_participar_curso <- annotate_figure(
  participar_curso,
  top = text_grob(
    "Figura: Cuando sea adulto(a) podré participar en la política",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_participar_curso
```

```{r, sociodemo-participacion, echo=FALSE}

# Calcular las frecuencias originales
frecuencias_originales <- ciud2 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Combinar las frecuencias originales con la base transformada
proc_datos_w2 <- ciud2 %>%
  pivot_longer(cols = c(genero, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p11_1_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p11_1_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Cuando sea adulto(a) podré participar en la política") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

```{r alluvial2, echo=FALSE}


# Gráfico cuando sea adulto
db_long <- edumer_students_long %>% filter(!is.na(p17_2) & !is.na(ola))
db_long$p17_2 <- factor(db_long$p17_2, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Calcular frecuencias
comprender <- db_long %>%
  group_by(id_estudiante, ola) %>%
  count(p17_2) %>%
  group_by(ola) %>%
  mutate(porcentaje=n/sum(n)) %>%
  ungroup() %>%
  na.omit()

# Agregar etiquetas
etiquetas.comprender <- db_long %>%
  group_by(ola, p17_2) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>%
  na.omit() %>%
  mutate(id_estudiante = 1)
  
# Ordenar factores
comprender$p17_2 <- factor(comprender$p17_2)
etiquetas.comprender$p17_2 <- factor(etiquetas.comprender$p17_2)

# Colores
colors <- c("#f1eef6ff", "#bdc9e1ff", "#74a9cfff", "#0570b0ff")

# Graficar
plot_comprender <- comprender %>%
  ggplot(aes(x = ola, fill = p17_2, stratum = p17_2,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) +
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.comprender,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                      position = position_stack(vjust = .5),
                      show.legend = FALSE,
                      size = 4,
                      color = "white",
                      bg.colour = "grey30") +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura: Comprendo bien las problemáticas políticas de nuestro país") +
  theme(legend.position = "bottom") +
  theme_blank()

plot_comprender

```

*Cruces con variables sociodemográficas de los estudiantes en la **ola 2** del estudio*

```{r dona-curso2, echo=FALSE}

# dona curso: Básica

basica_comprender <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p11_2_o2) #se filtran valores para esa categoría del curso
  
basica_comprender = round(prop.table(table(categorias=basica_comprender$p11_2_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_comprender = as.data.frame(basica_comprender) #convertimos el objeto en data.frame

basica_comprender <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p11_2_o2)

# Crear tabla de frecuencias relativas
basica_comprender <- prop.table(table(basica_comprender$p11_2_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_comprender) <- c("categorias", "Freq")

basica_comprender$categorias <- factor(basica_comprender$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_comprender<-ggplot(basica_comprender,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_comprender <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p11_2_o2) 

media_comprender = round(prop.table(table(categorias=media_comprender$p11_2_o2)),2)  

media_comprender = as.data.frame(media_comprender)

media_comprender$categorias <- factor(media_comprender$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_comprender<-ggplot(media_comprender,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

comprender_curso <- ggarrange(
   plot_basica_comprender, 
   plot_media_comprender,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_comprender_curso <- annotate_figure(
  comprender_curso,
  top = text_grob(
    "Figura: Comprendo bien las problemáticas políticas de nuestro país",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_comprender_curso
```

```{r sociodemo-comprender, echo=FALSE}
frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p11_2_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p11_2_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Comprendo bien las problemáticas políticas de nuestro país") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

## Percepción sobre la importancia de la Formación Ciudadana en su establecimiento

```{r alluvial3, echo=FALSE}

# Gráfico cuando sea adulto
db_long <- edumer_students_long %>% filter(!is.na(p19) & !is.na(ola))
db_long$p19 <- factor(db_long$p19, levels = c(1, 2, 3, 4), labels = c("Ninguna importancia", "Algo de importancia", "Mediana importancia", "Mucha importancia"))


# Calcular frecuencias
formciud <- db_long %>%
  group_by(id_estudiante, ola) %>%
  count(p19) %>%
  group_by(ola) %>%
  mutate(porcentaje=n/sum(n)) %>%
  ungroup() %>%
  na.omit()

# Agregar etiquetas
etiquetas.formciud <- db_long %>%
  group_by(ola, p19) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>%
  na.omit() %>%
  mutate(id_estudiante = 1)
  
# Ordenar factores
formciud$p19 <- factor(formciud$p19)
etiquetas.formciud$p19 <- factor(etiquetas.formciud$p19)

# Colores
colors <- c("#f1eef6ff", "#bdc9e1ff", "#74a9cfff", "#0570b0ff")

# Graficar
plot_formciud <- formciud %>%
  ggplot(aes(x = ola, fill = p19, stratum = p19,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) +
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.formciud,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                      position = position_stack(vjust = .5),
                      show.legend = FALSE,
                      size = 4,
                      color = "white",
                      bg.colour = "grey30") +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
       caption = "Fuente: EDUMER",
       title = "Figura: ¿Cuánta importancia dirías tú que se le da a la Formación Ciudadana en este establecimiento?") +
  theme(legend.position = "bottom") +
  theme_blank()

plot_formciud

```

*Cruces con características sociodemográficas de los estudiantes en la **ola 2** del estudio*

```{r dona-curso3, echo=FALSE}


# dona curso: Básica

basica_formciud <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p12_o2) #se filtran valores para esa categoría del curso
  
basica_formciud = round(prop.table(table(categorias=basica_formciud$p12_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_formciud = as.data.frame(basica_formciud) #convertimos el objeto en data.frame

basica_formciud <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p12_o2)

# Crear tabla de frecuencias relativas
basica_formciud <- prop.table(table(basica_formciud$p12_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_formciud) <- c("categorias", "Freq")

basica_formciud$categorias <- factor(basica_formciud$categorias, levels = c(1, 2, 3, 4), labels = c("Ninguna importancia", "Algo de importancia", "Mediana importancia", "Mucha importancia")) 

plot_basica_formciud<-ggplot(basica_formciud,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_formciud <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p12_o2) 

media_formciud = round(prop.table(table(categorias=media_formciud$p12_o2)),2)  

media_formciud = as.data.frame(media_formciud)

media_formciud$categorias <- factor(media_formciud$categorias, levels = c(1, 2, 3, 4), labels = c("Ninguna importancia", "Algo de importancia", "Mediana importancia", "Mucha importancia")) 

plot_media_formciud<-ggplot(media_formciud,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

formciud_curso <- ggarrange(
   plot_basica_formciud, 
   plot_media_formciud,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_formciud_curso <- annotate_figure(
  formciud_curso,
  top = text_grob(
    "Figura: ¿Cuánta importancia dirías tú que se le da a la Formación Ciudadana en este establecimiento?",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_formciud_curso

```

```{r sociodemo-importancia, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p12_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p12_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: ¿Cuánta importancia dirías tú que se le da a la Formación Ciudadana en este establecimiento?") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 10, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Ninguna importancia", "2" = "Algo de importancia", "3" = "Mediana importancia", "4" = "Mucha importancia"),
                    name = NULL)

```

## Grado de capacidad para realizar tareas utilizando Tecnologías de Información y Comunicaciones (TIC)

```{r, echo=FALSE}

# Editar fotografías digitales u otras imágenes gráficas

editar = round(prop.table(table(categorias=ciud2$p13_1_o2)),2)
editar = as.data.frame(editar)
editar$categorias <- factor(editar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_editar <- ggplot(editar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_editar <- annotate_figure(
  plot_editar,
  top = text_grob(
"Figura 4: Editar fotografías digitales u otras imágenes gráficas",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_editar
```

*Cruces con características sociodemográficas*

```{r dona-curso4, echo=FALSE}

# dona curso: Básica

basica_editar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_1_o2) #se filtran valores para esa categoría del curso
  
basica_editar = round(prop.table(table(categorias=basica_editar$p13_1_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_editar = as.data.frame(basica_editar) #convertimos el objeto en data.frame

basica_editar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_1_o2)

# Crear tabla de frecuencias relativas
basica_editar <- prop.table(table(basica_editar$p13_1_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_editar) <- c("categorias", "Freq")

basica_editar$categorias <- factor(basica_editar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_editar<-ggplot(basica_editar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_editar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_1_o2) 

media_editar = round(prop.table(table(categorias=media_editar$p13_1_o2)),2)  

media_editar = as.data.frame(media_editar)

media_editar$categorias <- factor(media_editar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_editar<-ggplot(media_editar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

editar_curso <- ggarrange(
   plot_basica_editar, 
   plot_media_editar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_editar_curso <- annotate_figure(
  editar_curso,
  top = text_grob(
    "Figura: Editar fotografías digitales u otras imágenes gráficas",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_editar_curso
```

```{r sociodemo-editar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_1_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_1_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Editar fotografías digitales u otras imágenes gráficas") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)

```

```{r, echo=FALSE}

# Escribir o editar texto para un trabajo escolar 

escribir = round(prop.table(table(categorias=ciud2$p13_2_o2)),2)
escribir = as.data.frame(escribir)
escribir$categorias <- factor(escribir$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_escribir <- ggplot(escribir,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_escribir <- annotate_figure(
  plot_escribir,
  top = text_grob(
"Figura 5: Escribir o editar texto para un trabajo escolar",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_escribir

```

*Cruces con características sociodemográficas*

```{r dona-curso5, echo=FALSE}

# dona curso: Básica

basica_escribir <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_2_o2) #se filtran valores para esa categoría del curso
  
basica_escribir = round(prop.table(table(categorias=basica_escribir$p13_2_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_escribir = as.data.frame(basica_escribir) #convertimos el objeto en data.frame

basica_escribir <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_2_o2)

# Crear tabla de frecuencias relativas
basica_escribir <- prop.table(table(basica_escribir$p13_2_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_escribir) <- c("categorias", "Freq")

basica_escribir$categorias <- factor(basica_escribir$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_escribir<-ggplot(basica_escribir,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_escribir <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_2_o2) 

media_escribir = round(prop.table(table(categorias=media_escribir$p13_2_o2)),2)  

media_escribir = as.data.frame(media_escribir)

media_escribir$categorias <- factor(media_escribir$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_escribir<-ggplot(media_escribir,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

escribir_curso <- ggarrange(
   plot_basica_escribir, 
   plot_media_escribir,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_escribir_curso <- annotate_figure(
  escribir_curso,
  top = text_grob(
    "Figura: Escribir o editar texto para un trabajo escolar",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_escribir_curso
```

```{r sociodemo-escribir, echo=FALSE}
frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_2_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_2_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Escribir o editar texto para un trabajo escolar") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)

```

```{r, echo=FALSE}

# Buscar y encontrar en Internet información relevante para un proyecto escolar

buscar = round(prop.table(table(categorias=ciud2$p13_3_o2)),2)
buscar = as.data.frame(buscar)
buscar$categorias <- factor(buscar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_buscar <- ggplot(buscar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_buscar <- annotate_figure(
  plot_buscar,
  top = text_grob(
"Figura 6: Buscar y encontrar en Internet información relevante para un proyecto escolar",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_buscar

```

*Cruces con características sociodemográficas*

```{r dona-curso6, echo=FALSE}

# dona curso: Básica

basica_buscar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_3_o2) #se filtran valores para esa categoría del curso
  
basica_buscar = round(prop.table(table(categorias=basica_buscar$p13_3_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_buscar = as.data.frame(basica_buscar) #convertimos el objeto en data.frame

basica_buscar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_3_o2)

# Crear tabla de frecuencias relativas
basica_buscar <- prop.table(table(basica_buscar$p13_3_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_buscar) <- c("categorias", "Freq")

basica_buscar$categorias <- factor(basica_buscar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_buscar<-ggplot(basica_buscar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_buscar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_3_o2) 

media_buscar = round(prop.table(table(categorias=media_buscar$p13_3_o2)),2)  

media_buscar = as.data.frame(media_buscar)

media_buscar$categorias <- factor(media_buscar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_buscar<-ggplot(media_buscar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

buscar_curso <- ggarrange(
   plot_basica_buscar, 
   plot_media_buscar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_buscar_curso <- annotate_figure(
  buscar_curso,
  top = text_grob(
    "Figura: Buscar y encontrar en Internet información relevante para un proyecto escolar",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_buscar_curso
```

```{r sociodemo-buscar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_3_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_3_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Buscar y encontrar en Internet información relevante para un proyecto escolar") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Crear una presentación multimedia (con sonido, imágenes o video) 

crear = round(prop.table(table(categorias=ciud2$p13_4_o2)),2)
crear = as.data.frame(crear)
crear$categorias <- factor(crear$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_crear <- ggplot(crear,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_crear <- annotate_figure(
  plot_crear,
  top = text_grob(
"Figura 7: Crear una presentación multimedia (con sonido, imágenes o video)",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_crear
```

*Cruces con características sociodemográficas*

```{r dona-curso7, echo=FALSE}

# dona curso: Básica

basica_crear <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_4_o2) #se filtran valores para esa categoría del curso
  
basica_crear = round(prop.table(table(categorias=basica_crear$p13_4_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_crear = as.data.frame(basica_crear) #convertimos el objeto en data.frame

basica_crear <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_4_o2)

# Crear tabla de frecuencias relativas
basica_crear <- prop.table(table(basica_crear$p13_4_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_crear) <- c("categorias", "Freq")

basica_crear$categorias <- factor(basica_crear$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_crear<-ggplot(basica_crear,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_crear <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_4_o2) 

media_crear = round(prop.table(table(categorias=media_crear$p13_4_o2)),2)  

media_crear = as.data.frame(media_crear)

media_crear$categorias <- factor(media_crear$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_crear<-ggplot(media_crear,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

crear_curso <- ggarrange(
   plot_basica_crear, 
   plot_media_crear,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_crear_curso <- annotate_figure(
  crear_curso,
  top = text_grob(
    "Figura: Crear una presentación multimedia (con sonido, imágenes o video)",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_crear_curso
```

```{r sociodemo-crear, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_4_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_4_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Crear una presentación multimedia (con sonido, imágenes o video)") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Cargar texto, imágenes o vídeo en un perfil en línea

cargar = round(prop.table(table(categorias=ciud2$p13_5_o2)),2)
cargar = as.data.frame(cargar)
cargar$categorias <- factor(cargar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_cargar <- ggplot(cargar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_cargar <- annotate_figure(
  plot_cargar,
  top = text_grob(
"Figura 8: Cargar texto, imágenes o vídeo en un perfil en línea",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_cargar
```

*Cruces con características sociodemográficas*

```{r dona-curso8, echo=FALSE}

# dona curso: Básica

basica_cargar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_5_o2) #se filtran valores para esa categoría del curso
  
basica_cargar = round(prop.table(table(categorias=basica_cargar$p13_5_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_cargar = as.data.frame(basica_cargar) #convertimos el objeto en data.frame

basica_cargar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_5_o2)

# Crear tabla de frecuencias relativas
basica_cargar <- prop.table(table(basica_cargar$p13_5_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_cargar) <- c("categorias", "Freq")

basica_cargar$categorias <- factor(basica_cargar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_cargar<-ggplot(basica_cargar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_cargar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_5_o2) 

media_cargar = round(prop.table(table(categorias=media_cargar$p13_5_o2)),2)  

media_cargar = as.data.frame(media_cargar)

media_cargar$categorias <- factor(media_cargar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_cargar<-ggplot(media_cargar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

cargar_curso <- ggarrange(
   plot_basica_cargar, 
   plot_media_cargar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_cargar_curso <- annotate_figure(
  cargar_curso,
  top = text_grob(
    "Figura: Cargar texto, imágenes o vídeo en un perfil en línea",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_cargar_curso
```

```{r sociodemo-cargar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_5_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_5_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Cargar texto, imágenes o vídeo en un perfil en línea") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Insertar una imagen en un documento o mensaje

insertar = round(prop.table(table(categorias=ciud2$p13_6_o2)),2)
insertar = as.data.frame(insertar)
insertar$categorias <- factor(insertar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_insertar <- ggplot(insertar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_insertar <- annotate_figure(
  plot_insertar,
  top = text_grob(
"Figura 9: Insertar una imagen en un documento o mensaje",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_insertar

```

*Cruces con características sociodemográficas*

```{r dona-curso9, echo=FALSE}

# dona curso: Básica

basica_insertar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_6_o2) #se filtran valores para esa categoría del curso
  
basica_insertar = round(prop.table(table(categorias=basica_insertar$p13_6_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_insertar = as.data.frame(basica_insertar) #convertimos el objeto en data.frame

basica_insertar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_6_o2)

# Crear tabla de frecuencias relativas
basica_insertar <- prop.table(table(basica_insertar$p13_6_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_insertar) <- c("categorias", "Freq")

basica_insertar$categorias <- factor(basica_insertar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_insertar<-ggplot(basica_insertar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_insertar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_6_o2) 

media_insertar = round(prop.table(table(categorias=media_insertar$p13_6_o2)),2)  

media_insertar = as.data.frame(media_insertar)

media_insertar$categorias <- factor(media_insertar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_insertar<-ggplot(media_insertar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

insertar_curso <- ggarrange(
   plot_basica_insertar, 
   plot_media_insertar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_insertar_curso <- annotate_figure(
  insertar_curso,
  top = text_grob(
    "Figura: Insertar una imagen en un documento o mensaje",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_insertar_curso
```

```{r sociodemo-insertar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_6_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_6_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Insertar una imagen en un documento o mensaje") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Instalar un programa o aplicación

instalar = round(prop.table(table(categorias=ciud2$p13_7_o2)),2)
instalar = as.data.frame(instalar)
instalar$categorias <- factor(instalar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_instalar <- ggplot(instalar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_instalar <- annotate_figure(
  plot_instalar,
  top = text_grob(
"Figura 10: Instalar un programa o aplicación",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_instalar
```

*Cruces con características sociodemográficas*

```{r dona-curso10, echo=FALSE}

# dona curso: Básica

basica_instalar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_7_o2) #se filtran valores para esa categoría del curso
  
basica_instalar = round(prop.table(table(categorias=basica_instalar$p13_7_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_instalar = as.data.frame(basica_instalar) #convertimos el objeto en data.frame

basica_instalar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_7_o2)

# Crear tabla de frecuencias relativas
basica_instalar <- prop.table(table(basica_instalar$p13_7_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_instalar) <- c("categorias", "Freq")

basica_instalar$categorias <- factor(basica_instalar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_instalar<-ggplot(basica_instalar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_instalar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_7_o2) 

media_instalar = round(prop.table(table(categorias=media_instalar$p13_7_o2)),2)  

media_instalar = as.data.frame(media_instalar)

media_instalar$categorias <- factor(media_instalar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_instalar<-ggplot(media_instalar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

instalar_curso <- ggarrange(
   plot_basica_instalar, 
   plot_media_instalar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_instalar_curso <- annotate_figure(
  instalar_curso,
  top = text_grob(
    "Figura: Instalar un programa o aplicación",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_instalar_curso
```

```{r sociodemo-instalar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_7_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_7_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Instalar un programa o aplicación") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)

```

```{r, echo=FALSE}

# Juzgar si puede confiar en la información que encuentra en Internet

juzgar = round(prop.table(table(categorias=ciud2$p13_8_o2)),2)
juzgar = as.data.frame(juzgar)
juzgar$categorias <- factor(juzgar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_juzgar <- ggplot(juzgar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_juzgar <- annotate_figure(
  plot_juzgar,
  top = text_grob(
"Figura 10: Juzgar si puede confiar en la información que encuentra en Internet",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_juzgar


```

*Cruces con características sociodemográficas*

```{r dona-curso11, echo=FALSE}

# dona curso: Básica

basica_juzgar <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_8_o2) #se filtran valores para esa categoría del curso
  
basica_juzgar = round(prop.table(table(categorias=basica_juzgar$p13_8_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_juzgar = as.data.frame(basica_juzgar) #convertimos el objeto en data.frame

basica_juzgar <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_8_o2)

# Crear tabla de frecuencias relativas
basica_juzgar <- prop.table(table(basica_juzgar$p13_8_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_juzgar) <- c("categorias", "Freq")

basica_juzgar$categorias <- factor(basica_juzgar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_juzgar<-ggplot(basica_juzgar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_juzgar <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_8_o2) 

media_juzgar = round(prop.table(table(categorias=media_juzgar$p13_8_o2)),2)  

media_juzgar = as.data.frame(media_juzgar)

media_juzgar$categorias <- factor(media_juzgar$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_juzgar<-ggplot(media_juzgar,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

juzgar_curso <- ggarrange(
   plot_basica_juzgar, 
   plot_media_juzgar,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_juzgar_curso <- annotate_figure(
  juzgar_curso,
  top = text_grob(
    "Figura: Juzgar si puede confiar en la información que encuentra en Internet",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_juzgar_curso
```

```{r sociodemo-juzgar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_8_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_8_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Juzgar si puede confiar en la información que encuentra en Internet") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Crear una base de datos (por ejemplo, utilizando [Microsoft access®])

crearbase = round(prop.table(table(categorias=ciud2$p13_9_o2)),2)
crearbase = as.data.frame(crearbase)
crearbase$categorias <- factor(crearbase$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_crearbase <- ggplot(crearbase,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_crearbase <- annotate_figure(
  plot_crearbase,
  top = text_grob(
"Figura 11: Crear una base de datos (por ejemplo, utilizando [Microsoft access®])",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_crearbase

```

*Cruces con características sociodemográficas*

```{r dona-curso12, echo=FALSE}

# dona curso: Básica

basica_crearbase <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_9_o2) #se filtran valores para esa categoría del curso
  
basica_crearbase = round(prop.table(table(categorias=basica_crearbase$p13_9_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_crearbase = as.data.frame(basica_crearbase) #convertimos el objeto en data.frame

basica_crearbase <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_9_o2)

# Crear tabla de frecuencias relativas
basica_crearbase <- prop.table(table(basica_crearbase$p13_9_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_crearbase) <- c("categorias", "Freq")

basica_crearbase$categorias <- factor(basica_crearbase$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_crearbase<-ggplot(basica_crearbase,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_crearbase <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_9_o2) 

media_crearbase = round(prop.table(table(categorias=media_crearbase$p13_9_o2)),2)  

media_crearbase = as.data.frame(media_crearbase)

media_crearbase$categorias <- factor(media_crearbase$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_crearbase<-ggplot(media_crearbase,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

crearbase_curso <- ggarrange(
   plot_basica_crearbase, 
   plot_media_crearbase,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_crearbase_curso <- annotate_figure(
  crearbase_curso,
  top = text_grob(
    "Figura: Crear una base de datos (por ejemplo, utilizando [Microsoft access®])",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_crearbase_curso
```

```{r sociodemo-crearbase, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_9_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_9_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Crear una base de datos (por ejemplo, utilizando [Microsoft access®])") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Construir o editar una página web

pagweb = round(prop.table(table(categorias=ciud2$p13_10_o2)),2)
pagweb = as.data.frame(pagweb)
pagweb$categorias <- factor(pagweb$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_pagweb <- ggplot(pagweb,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_pagweb <- annotate_figure(
  plot_pagweb,
  top = text_grob(
"Figura 12: Construir o editar una página web",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_pagweb

```

*Cruces con características sociodemográficas*

```{r dona-curso13, echo=FALSE}

# dona curso: Básica

basica_pagweb <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_10_o2) #se filtran valores para esa categoría del curso
  
basica_pagweb = round(prop.table(table(categorias=basica_pagweb$p13_10_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_pagweb = as.data.frame(basica_pagweb) #convertimos el objeto en data.frame

basica_pagweb <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_10_o2)

# Crear tabla de frecuencias relativas
basica_pagweb <- prop.table(table(basica_pagweb$p13_10_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_pagweb) <- c("categorias", "Freq")

basica_pagweb$categorias <- factor(basica_pagweb$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_pagweb<-ggplot(basica_pagweb,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_pagweb <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_10_o2) 

media_pagweb = round(prop.table(table(categorias=media_pagweb$p13_10_o2)),2)  

media_pagweb = as.data.frame(media_pagweb)

media_pagweb$categorias <- factor(media_pagweb$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_pagweb<-ggplot(media_pagweb,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

pagweb_curso <- ggarrange(
   plot_basica_pagweb, 
   plot_media_pagweb,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_pagweb_curso <- annotate_figure(
  pagweb_curso,
  top = text_grob(
    "Figura: Construir o editar una página web",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_pagweb_curso
```

```{r sociodemo-pagweb, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_10_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_10_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Construir o editar una página web") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 12, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Crear un programa informático, macro o aplicación (por ejemplo, en Basic, Visual Basic, etc.)

programa = round(prop.table(table(categorias=ciud2$p13_11_o2)),2)
programa = as.data.frame(programa)
programa$categorias <- factor(programa$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_programa <- ggplot(programa,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_programa <- annotate_figure(
  plot_programa,
  top = text_grob(
"Figura 13: Crear un programa informático, macro o aplicación (por ejemplo, en Basic, Visual Basic, etc.)",
    size = 10, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_programa

```

*Cruces con características sociodemográficas*

```{r dona-curso14, echo=FALSE}

# dona curso: Básica

basica_programa <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_11_o2) #se filtran valores para esa categoría del curso
  
basica_programa = round(prop.table(table(categorias=basica_programa$p13_11_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_programa = as.data.frame(basica_programa) #convertimos el objeto en data.frame

basica_programa <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_11_o2)

# Crear tabla de frecuencias relativas
basica_programa <- prop.table(table(basica_programa$p13_11_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_programa) <- c("categorias", "Freq")

basica_programa$categorias <- factor(basica_programa$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_programa<-ggplot(basica_programa,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_programa <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_11_o2) 

media_programa = round(prop.table(table(categorias=media_programa$p13_11_o2)),2)  

media_programa = as.data.frame(media_programa)

media_programa$categorias <- factor(media_programa$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_programa<-ggplot(media_programa,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

programa_curso <- ggarrange(
   plot_basica_programa, 
   plot_media_programa,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_programa_curso <- annotate_figure(
  programa_curso,
  top = text_grob(
    "Figura: Crear un programa informático, macro o aplicación (por ejemplo, en Basic, Visual Basic, etc.)",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_programa_curso
```

```{r sociodemo-programar, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_11_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_11_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Crear un programa informático, macro o aplicación (por ejemplo, en Basic, Visual Basic, etc.)") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 10, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```

```{r, echo=FALSE}

# Configurar una red de área local de computadores u otras tecnologías de información y comunicaciones

redlocal = round(prop.table(table(categorias=ciud2$p13_12_o2)),2)
redlocal = as.data.frame(redlocal)
redlocal$categorias <- factor(redlocal$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo"))

plot_redlocal <- ggplot(redlocal,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Ola 2")

# Agregar una etiqueta global centrada
plot_redlocal <- annotate_figure(
  plot_redlocal,
  top = text_grob(
"Figura 14: Configurar una red de área local de computadores u otras Tecnologías de Información y Comunicaciones",
    size = 9, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_redlocal
```

*Cruces con características sociodemográficas*

```{r dona-curso15, echo=FALSE}

# dona curso: Básica

basica_redlocal <- ciud2 %>% dplyr::filter(nivel_estudiante_o2=="Básica") %>% 
  dplyr::select(p13_12_o2) #se filtran valores para esa categoría del curso
  
basica_redlocal = round(prop.table(table(categorias=basica_redlocal$p13_12_o2)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_redlocal = as.data.frame(basica_redlocal) #convertimos el objeto en data.frame

basica_redlocal <- ciud2 %>%
  dplyr::filter(nivel_estudiante_o2 == "Básica") %>%
  dplyr::select(p13_12_o2)

# Crear tabla de frecuencias relativas
basica_redlocal <- prop.table(table(basica_redlocal$p13_12_o2)) %>%
  round(2) %>%
  as.data.frame()

# Renombrar columnas para asegurar compatibilidad con ggplot
colnames(basica_redlocal) <- c("categorias", "Freq")

basica_redlocal$categorias <- factor(basica_redlocal$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_basica_redlocal<-ggplot(basica_redlocal,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos

# dona curso: Media

# categoría media
media_redlocal <- ciud2 %>% filter(nivel_estudiante_o2=="Media") %>% 
  dplyr::select(p13_12_o2) 

media_redlocal = round(prop.table(table(categorias=media_redlocal$p13_12_o2)),2)  

media_redlocal = as.data.frame(media_redlocal)

media_redlocal$categorias <- factor(media_redlocal$categorias, levels = c(1, 2, 3), labels = c("Sé cómo realizarlo", "No sé realizarlo, pero me siento capaz de aprenderlo", "No me siento capaz de aprenderlo")) 

plot_media_redlocal<-ggplot(media_redlocal,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

redlocal_curso <- ggarrange(
   plot_basica_redlocal, 
   plot_media_redlocal,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_redlocal_curso <- annotate_figure(
  redlocal_curso,
  top = text_grob(
    "Figura: Configurar una red de área local de computadores u otras Tecnologías de Información y Comunicaciones",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))

plot_es_redlocal_curso
```

```{r sociodemo-redlocal, echo=FALSE}

frecuencias <- proc_datos_w2 %>%
  group_by(variable, categoria, p13_12_o2) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>%
  na.omit()
  
# Ajustar los nombres
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas 
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Graficar las barras
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(p13_12_o2))) + 
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_shadowtext(aes(label = scales::percent(Porcentaje, accuracy = 1)),
                  position = position_stack(vjust = 0.5),
                  color = "white",
                  bg.color = "grey30",
                  bg.r = 0.1,
                  size = 4) +
  labs(
    x = NULL,
    y = NULL, 
    fill = "Grado de acuerdo",
    title = "Figura: Configurar una red de área local de computadores u otras Tecnologías de Información y Comunicaciones") +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9),
    legend.position = "bottom",
    plot.title = element_text(size = 10, face = "italic", color = "black")
  ) + 
  scale_fill_brewer(palette = "Blues",
                    labels = c("1" = "Sé cómo realizarlo", "2" = "No sé realizarlo, pero me siento capaz de aprenderlo", "3" = "No me siento capaz de aprenderlo"),
                    name = NULL)
```
