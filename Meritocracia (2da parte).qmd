---
title: "Meritocracia en la escuela"
---

```{r, data, echo=FALSE}

# cargar paquetes
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr, sjmisc, ggalluvial, shadowtext)


# cargar base longitudinal
load("../edumer-ola2/input/data/proc/edumer_students_long.RData")
```

```{r, echo=FALSE, message=FALSE}
# codificamos los valores 99-88 como missing para todas las variables
db_long <- edumer_students_long %>% set_na(., na = c(99, 88))

# iteramos la recodificación de etiquetas para cada variable y fraseo


for (i in names(dplyr::select(db_long, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Muy en db_longacuerdo", "db_longacuerdo", "De acuerdo", "Muy de acuerdo")
  )
}


for (i in names(dplyr::select(db_long, tidyselect::starts_with("p10_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
  )
}


for (i in names(dplyr::select(db_long, tidyselect::starts_with("p11_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
  )
}

for (i in names(dplyr::select(db_long, tidyselect::starts_with("p12_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Si", "No")
  )
}

for (i in names(dplyr::select(db_long, tidyselect::starts_with("p13_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
  )
}


for (i in names(dplyr::select(db_long, tidyselect::starts_with("p18_")))) {
  db_long[[i]] <- sjlabelled::set_labels(
    x = db_long[[i]],
    labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
  )
}
```

# Meritocracia en la escuela

## Creencias en la meritocracia 

### Percepciones

-   Percepción esfuerzo

```{r, alluvial-pe-school, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p2_1) & !is.na(ola))
db_long$p2_1 <- factor(db_long$p2_1, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias
pe <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p2_1) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pe <- db_long %>%
  group_by(ola, p2_1) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pe$p2_1 <- factor(pe$p2_1)
etiquetas.pe$p2_1 <- factor(etiquetas.pe$p2_1)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pe <- pe %>% 
  ggplot(aes(x = ola, fill = p2_1, stratum = p2_1,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pe,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
    caption = "Fuente: EDUMER",
    title = "Figura: En esta escuela quienes se esfuerzan\nobtienen buenas notas") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_pe
```

-   Percepción cambio esfuerzo

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p8_1) & !is.na(ola))
db_long$p8_1 <- factor(db_long$p8_1, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias
ce <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p8_1) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.ce <- db_long %>%
  group_by(ola, p8_1) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
ce$p8_1 <- factor(ce$p8_1)
etiquetas.ce$p8_1 <- factor(etiquetas.ce$p8_1)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_ce <- ce %>% 
  ggplot(aes(x = ola, fill = p8_1, stratum = p8_1,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.ce,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
    caption = "Fuente: EDUMER",
    title = "Figura: Las personas pueden esforzarse más si lo intentan") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_ce
```

-   Percepción talento

```{r, alluvial-pt-school, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p2_2) & !is.na(ola))
db_long$p2_2 <- factor(db_long$p2_2, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias
pt <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p2_2) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pt <- db_long %>%
  group_by(ola, p2_2) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pt$p2_2 <- factor(pt$p2_2)
etiquetas.pt$p2_2 <- factor(etiquetas.pt$p2_2)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pt <- pt %>% 
  ggplot(aes(x = ola, fill = p2_2, stratum = p2_2,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pt,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
    caption = "Fuente: EDUMER",
    title = "Figura: En esta escuela quienes son inteligentes \nobtienen buenas notas") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_pt
```

-   Percepción cambio talento

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p8_2) & !is.na(ola))
db_long$p8_2 <- factor(db_long$p8_2, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias
ct <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p8_2) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.ct <- db_long %>%
  group_by(ola, p8_2) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
ct$p8_2 <- factor(ct$p8_2)
etiquetas.ct$p8_2 <- factor(etiquetas.ct$p8_2)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_ct <- ct %>% 
  ggplot(aes(x = ola, fill = p8_2, stratum = p8_2,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.ct,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
    caption = "Fuente: EDUMER",
    title = "Figura: Las personas pueden ser más inteligentes si lo intentan") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_ct
```

-   Percepción merecimiento

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p2_3) & !is.na(ola))
db_long$p2_3 <- factor(db_long$p2_3, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias
pm <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p2_3) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.pm <- db_long %>%
  group_by(ola, p2_3) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
pm$p2_3 <- factor(pm$p2_3)
etiquetas.pm$p2_3 <- factor(etiquetas.pm$p2_3)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_pm <- pm %>% 
  ggplot(aes(x = ola, fill = p2_3, stratum = p2_3,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.pm,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
    caption = "Fuente: EDUMER",
    title = "Figura: En esta escuela los/as estudiantes \nobtienen las notas que merecen") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_pm
```

### Preferencia

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p3) & !is.na(ola))
#db_long$p3 <- factor(db_long$p3, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
#db_long$p3 <- factor(db_long$p3, levels = c(1, 2, 3, 4,5,6,7,8,9,10), labels = c("Esfuerzo", "", "", "", "", "", "", "", "", "Talento"))

# Paso 2: Calcular frecuencias
ps <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p3) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.ps <- db_long %>%
  group_by(ola, p3) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
ps$p3 <- factor(ps$p3)
etiquetas.ps$p3 <- factor(etiquetas.ps$p3)

# Paso 5: Definir colores de las barras
colors <-  c("#1D3557", "#457B9D", "#5A98C4", "#A8DADC", "#D0EAF1",
                       "#FAD2E1", "#F4A6B8", "#E87C87", "#D95D5D", "#C0392B")



# Paso 6: Graficar
plot_ps <- ps %>% 
  ggplot(aes(x = ola, fill = p3, stratum = p3,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.ps,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 3,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "1 (esfuerzo) \n10 (talento)",
    caption = "Fuente: EDUMER",
    title = "Figura: ¿Qué es más importante para obtener buenas notas, \nel esfuerzo o la inteligencia?") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_ps
```

```{r, echo=FALSE, warning=FALSE}
pref <- db_long %>%
  group_by(p3) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(pct = count / sum(count) * 100)

plot_pref <- ggplot(pref, aes(x=p3, y= pct)) + 
  geom_bar(stat= "identity", fill = "#9ecae1")+ 
  labs(x = "Preferencia de mérito en la escuela",
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 100)) +
  theme_classic() +
  ggtitle("Ola 2") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "black", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20)) +
geom_text(aes(label = paste0(round(pct, 1), "%")), 
            stat = "identity", 
            vjust = -0.5, 
            color = "black",
            position = position_stack(0.5), 
          size = 4)
```

```{r, echo=FALSE, warning=FALSE}
pref1 <- db_long %>%
  group_by(p3) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(pct = count / sum(count) * 100)

plot_pref1 <- ggplot(pref1, aes(x=p3, y= pct)) + 
  geom_bar(stat= "identity", fill = "#9ecae1")+ 
  labs(x = "Preferencia de mérito en la escuela",
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 100)) +
  theme_classic() +
  ggtitle("Ola 1") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "black", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20)) +
geom_text(aes(label = paste0(round(pct, 1), "%")), 
            stat = "identity", 
            vjust = -0.5, 
            color = "black",
            position = position_stack(0.5), 
          size = 4)
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# grafico esfuerzo en la sociedad

# Combinar los gráficos
final_pref <- ggarrange(
  plot_pref, 
  plot_pref1,
  common.legend = TRUE, 
  nrow = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_final_pref <- annotate_figure(
  final_pref,
  top = text_grob(
    "Figura: ¿Qué es más importante para obtener buenas notas, el esfuerzo o la inteligencia?",
    size = 12, 
    face = "italic", 
    color = "black",
    hjust = 0.5))


plot_final_pref
```

Se prefiere más el esfuerzo que el talento. Aunque la mayoría se concentra en ambos.

# Justicia en las notas 

## Merecimiento en la nota

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p5) & !is.na(ola))
db_long$p5 <- factor(db_long$p5, labels= c("Menos de lo que merzco", "Lo que merzco", "Más de lo que merzco"))

# Paso 2: Calcular frecuencias
mn <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p5) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.mn <- db_long %>%
  group_by(ola, p5) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
mn$p5 <- factor(mn$p5)
etiquetas.mn$p5 <- factor(etiquetas.mn$p5)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_mn <- mn %>% 
  ggplot(aes(x = ola, fill = p5, stratum = p5,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.mn,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Sensación de merecimiento",
    caption = "Fuente: EDUMER",
    title = "Figura: ¿Te parece que este promedio fue más o menos \nde lo que merecías?") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_mn
```

## Merecimiento nota y esfuerzo

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p7) & !is.na(ola))
db_long$p7 <- factor(db_long$p7, labels= c("Menos de lo que merzco", "Lo que merzco", "Más de lo que merzco"))

# Paso 2: Calcular frecuencias
mne <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p7) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.mne <- db_long %>%
  group_by(ola, p7) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
mne$p7 <- factor(mne$p7)
etiquetas.mne$p7 <- factor(etiquetas.mne$p7)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_mne <- mne %>% 
  ggplot(aes(x = ola, fill = p7, stratum = p7,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.mne,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Sensación de merecimiento",
    caption = "Fuente: EDUMER",
    title = "Figura:Tomando en cuenta el tiempo que le dedicas a tus estudios, \nlas notas que me saco son… ") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_mne
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
menos_nota <-db_long %>% filter(p5==1) %>% 
  ggplot() + 
  geom_density(aes(x=p4), color = "#9ecae1", alpha = 0.8, linewidth = 0.7)  +
  geom_density(aes(x=p6), color = "#3182bd", alpha = 0.8, linewidth = 0.7)+
  labs(x = "Nota", 
       y = "Frecuencia" )  +
  scale_y_percent() +
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
  scale_x_continuous(breaks = 1:7) +
  expand_limits(x = c(1, 7))+
  theme_classic() +
  ggtitle("Mis promedio fue\n menos de lo que merezco") +
  theme(plot.title = element_text(size = 9,
    face = "bold", 
    color = "black", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
mas_nota <- db_long %>% filter(p5==3) %>% 
  ggplot() + 
  geom_density(aes(x=p4), color = "#9ecae1", alpha = 0.8, linewidth = 0.7)  +
  geom_density(aes(x=p6), color = "#3182bd", alpha = 0.8, linewidth = 0.7)+
  labs(x = "Nota", 
       y = "Frecuencia" )  +
  scale_y_percent() +
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
  scale_x_continuous(breaks = 1:7) +
  expand_limits(x = c(1, 7))+
  theme_classic() +
  ggtitle("Mi promedio fue\n más de lo que merezco") +
  theme(plot.title = element_text(size = 9,
    face = "bold", 
    color = "black", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Leyenda personalizada
legend_plot <- ggplot(data.frame(x = c("Promedio obtenido", "Promedio que cree merecer"), 
                                 y = c(1, 1))) +
  geom_point(aes(x = x, y = y, color = x), size = 5) +
  scale_color_manual(values = c("#9ecae1", "#3182bd")) +
  guides(color = guide_legend(title = NULL)) +
  theme_void() +
  theme(legend.position = "bottom")


legend <- cowplot::get_legend(legend_plot)

# Combinar los gráficos y la leyenda
combined_plot <- cowplot::plot_grid(menos_nota, mas_nota, nrow = 1, labels = NULL)

# Añadir el título y la leyenda al gráfico combinado
final_plot <- cowplot::plot_grid(
  cowplot::plot_grid(NULL, annotate_figure(
    combined_plot,
    top = text_grob(
      "Figura: Contraste entre la nota obtenida y la nota preferida\npor el estudiante",
      size = 12, 
      face = "italic", 
      color = "black",
      hjust = 0.5
    ),
    bottom = NULL),
    ncol = 1, 
    rel_heights = c(0.1, 1, 0.1)),
   legend, 
  ncol = 1, 
  rel_heights = c(1, 0.1)
)

final_plot
```

# Desigualdad

```{r, echo=FALSE}
# Gráfico alluvial 

# Paso 1: Preparar datos
db_long <- db_long %>% filter(!is.na(p9_6) & !is.na(ola))
db_long$p9_6 <- factor(db_long$p9_6, labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))

# Paso 2: Calcular frecuencias
dm <- db_long %>% 
  group_by(id_estudiante, ola) %>% 
  count(p9_6) %>% 
  group_by(ola) %>% 
  mutate(porcentaje=n/sum(n)) %>% 
  ungroup() %>% 
  na.omit() 

# Paso 3: Agregar etiquetas
etiquetas.dm <- db_long %>%
  group_by(ola, p9_6) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(ola) %>%
  mutate(porcentaje = count / sum(count)) %>% 
  na.omit() %>% 
  mutate(id_estudiante = 1)

# Paso 4: Ordenar los factores de la misma forma
dm$p9_6 <- factor(dm$p9_6)
etiquetas.dm$p9_6 <- factor(etiquetas.dm$p9_6)

# Paso 5: Definir colores de las barras
colors <- c("#f1eef6ff","#bdc9e1ff","#74a9cfff","#0570b0ff")

# Paso 6: Graficar
plot_dm <- dm %>% 
  ggplot(aes(x = ola, fill = p9_6, stratum = p9_6,
             alluvium = id_estudiante, y = porcentaje)) +
  ggalluvial::geom_flow(alpha = .66) + 
  ggalluvial::geom_stratum(linetype = 0) +
  scale_y_continuous(labels = scales::percent) + 
  scale_fill_manual(values = colors) +
  geom_shadowtext(data = etiquetas.dm,
                  aes(label = ifelse(porcentaje > 0, scales::percent(porcentaje, accuracy = .1), "")),
                  position = position_stack(vjust = .5),
                  show.legend = FALSE,
                  size = 4,
                  color = 'white',
                  bg.colour = 'grey30') +
  labs(y = "Porcentaje",
       x = "Ola",
       fill = "Grado de acuerdo",
    caption = "Fuente: EDUMER",
    title = "Figura 1: Está bien que las personas más inteligentes y/o talentosas ganen más dinero, \naun cuando requieran esforzarse menos para ello") +
  theme(legend.position = "bottom") + 
  theme_blank()
plot_dm
```
